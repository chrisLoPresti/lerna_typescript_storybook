"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.symbol");

require("core-js/modules/es6.array.for-each");

require("core-js/modules/es6.array.filter");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es6.object.define-property");

require("core-js/modules/es6.object.create");

require("core-js/modules/es6.object.set-prototype-of");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _styled = _interopRequireDefault(require("@emotion/styled"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var DISPLAY_TIMEOUT = 1000;
var Container =
/*#__PURE__*/
(0, _styled.default)("div", {
  target: "eiokus70"
})({
  position: 'absolute',
  padding: '5px 8px',
  bottom: 0,
  right: 0,
  backgroundColor: 'rgba(255, 255, 255, 0.5)',
  borderRadius: '5px 0 0 0'
});
var Section =
/*#__PURE__*/
(0, _styled.default)("span", {
  target: "eiokus71"
})({
  fontSize: 12
});
var Delimiter =
/*#__PURE__*/
(0, _styled.default)("span", {
  target: "eiokus72"
})({
  margin: '0px 5px',
  fontSize: 12
});

var Dimensions =
/*#__PURE__*/
function (_Component) {
  _inherits(Dimensions, _Component);

  function Dimensions(props) {
    var _this;

    _classCallCheck(this, Dimensions);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dimensions).call(this, props));
    _this.state = _objectSpread({}, props, {
      isVisible: false
    });
    _this.hideTimeout = null;
    return _this;
  }

  _createClass(Dimensions, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _this2 = this;

      var isVisible = this.state.isVisible;

      if (isVisible) {
        clearTimeout(this.hideTimeout);
        this.hideTimeout = setTimeout(function () {
          _this2.setState({
            isVisible: false
          });
        }, DISPLAY_TIMEOUT);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearTimeout(this.hideTimeout);
    }
  }, {
    key: "render",
    value: function render() {
      var isVisible = this.state.isVisible;
      var _this$props = this.props,
          width = _this$props.width,
          height = _this$props.height;
      return isVisible ? _react.default.createElement(Container, null, _react.default.createElement(Section, null, "".concat(width, "px")), _react.default.createElement(Delimiter, null, "x"), _react.default.createElement(Section, null, "".concat(height, "px"))) : null;
    }
  }]);

  return Dimensions;
}(_react.Component);

Dimensions.getDerivedStateFromProps = function (nextProps, prevState) {
  if (nextProps.width !== prevState.width || nextProps.height !== prevState.height) {
    return _objectSpread({}, nextProps, {
      isVisible: true
    });
  }

  return null;
};

Dimensions.propTypes = {
  width: _propTypes.default.number.isRequired,
  height: _propTypes.default.number.isRequired
};
var _default = Dimensions;
exports.default = _default;