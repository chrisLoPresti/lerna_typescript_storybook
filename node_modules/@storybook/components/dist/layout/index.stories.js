"use strict";

require("core-js/modules/es6.object.assign");

require("core-js/modules/es6.array.for-each");

require("core-js/modules/es6.array.filter");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es6.object.define-property");

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var panelStyle = {
  position: 'absolute',
  height: '100%',
  width: '100%',
  color: 'white'
};
var componentStubs = {
  storiesPanel: function storiesPanel() {
    return _react.default.createElement("div", {
      style: _objectSpread({}, panelStyle, {
        background: '#4abdac'
      })
    }, "Stories");
  },
  addonPanel: function addonPanel() {
    return _react.default.createElement("div", {
      style: _objectSpread({}, panelStyle, {
        background: '#fc4a1a'
      })
    }, "Addon");
  },
  preview: function preview() {
    return _react.default.createElement("div", {
      style: _objectSpread({}, panelStyle, {
        background: '#f7b733'
      })
    }, "Preview");
  },
  searchBox: function searchBox() {
    return _react.default.createElement("div", null);
  },
  shortcutsHelp: function shortcutsHelp() {
    return _react.default.createElement("div", null);
  }
};
(0, _react2.storiesOf)('Components|Layout', module).add('default', function () {
  return _react.default.createElement(_index.default, _extends({
    showStoriesPanel: true,
    showAddonPanel: true,
    goFullScreen: false,
    addonPanelInRight: false,
    isMobileDevice: false
  }, componentStubs));
}).add('mobile', function () {
  return _react.default.createElement(_index.default, _extends({
    isMobileDevice: true,
    showStoriesPanel: true,
    showAddonPanel: true,
    goFullScreen: false,
    addonPanelInRight: false
  }, componentStubs));
}).add('full screen', function () {
  return _react.default.createElement(_index.default, _extends({
    showStoriesPanel: false,
    showAddonPanel: false,
    goFullScreen: true,
    addonPanelInRight: false,
    isMobileDevice: false
  }, componentStubs));
}).add('no stories panel', function () {
  return _react.default.createElement(_index.default, _extends({
    showStoriesPanel: false,
    showAddonPanel: true,
    goFullScreen: false,
    addonPanelInRight: false,
    isMobileDevice: false
  }, componentStubs));
}).add('no addon panel', function () {
  return _react.default.createElement(_index.default, _extends({
    showStoriesPanel: true,
    showAddonPanel: false,
    goFullScreen: false,
    addonPanelInRight: false,
    isMobileDevice: false
  }, componentStubs));
}).add('addon panel in right', function () {
  return _react.default.createElement(_index.default, _extends({
    showStoriesPanel: true,
    showAddonPanel: true,
    goFullScreen: false,
    addonPanelInRight: true,
    isMobileDevice: false
  }, componentStubs));
});