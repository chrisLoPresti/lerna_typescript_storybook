"use strict";

require("core-js/modules/es6.object.define-property");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Button = exports.Textarea = exports.Select = exports.Input = void 0;

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _reactTextareaAutosize = _interopRequireDefault(require("react-textarea-autosize"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles = function styles(_ref) {
  var theme = _ref.theme;
  return {
    padding: '0 10px',
    color: theme.mainTextColor,
    background: theme.inputFill,
    borderRadius: theme.mainBorderRadius,
    transition: 'border-bottom-color .3s linear',
    border: '0 solid transparent',
    borderTop: '3px solid transparent',
    borderBottom: '3px solid transparent',
    boxSizing: 'border-box',
    position: 'relative',
    '&:focus': {
      outline: '0 none',
      borderBottomColor: theme.highlightColor
    }
  };
};

var sizes = function sizes(_ref2) {
  var size = _ref2.size;

  switch (size) {
    case '100%':
      {
        return {
          width: '100%'
        };
      }

    case 'flex':
      {
        return {
          flex: 1
        };
      }

    case 'auto':
    default:
      {
        return {
          display: 'inline'
        };
      }
  }
};

var alignment = function alignment(_ref3) {
  var align = _ref3.align;

  switch (align) {
    case 'end':
      {
        return {
          textAlign: 'right'
        };
      }

    case 'center':
      {
        return {
          textAlign: 'center'
        };
      }

    case 'start':
    default:
      {
        return {
          textAlign: 'left'
        };
      }
  }
};

var validation = function validation(_ref4) {
  var valid = _ref4.valid,
      theme = _ref4.theme;

  switch (valid) {
    case 'valid':
      {
        return {
          borderBottomColor: theme.successColor
        };
      }

    case 'error':
      {
        return {
          borderBottomColor: theme.failColor
        };
      }

    case 'warn':
      {
        return {
          borderBottomColor: theme.warnColor
        };
      }

    case undefined:
    case null:
    default:
      {
        return {};
      }
  }
};

var Input =
/*#__PURE__*/
(0, _styled.default)("input", {
  target: "e1lk8yn70"
})(styles, sizes, alignment, validation, {
  minHeight: 32
});
exports.Input = Input;
Input.styles = styles;
Input.sizes = sizes;
Input.alignment = alignment;
Input.displayName = 'Input';
var Select =
/*#__PURE__*/
(0, _styled.default)("select", {
  target: "e1lk8yn71"
})(styles, sizes, alignment, validation, {
  height: 32,
  userSelect: 'none',
  paddingRight: 20
});
exports.Select = Select;
Select.displayName = 'Select';
var Textarea =
/*#__PURE__*/
(0, _styled.default)(_reactTextareaAutosize.default, {
  target: "e1lk8yn72"
})(styles, sizes, alignment, validation, {
  minHeight: 32,
  paddingTop: 5,
  paddingBottom: 5,
  overflow: 'visible'
});
exports.Textarea = Textarea;
Textarea.displayName = 'Textarea';
var Button =
/*#__PURE__*/
(0, _styled.default)("button", {
  target: "e1lk8yn73"
})(styles, sizes, alignment, validation, {
  cursor: 'pointer',
  userSelect: 'none',
  minHeight: 32,
  boxSizing: 'border-box'
});
exports.Button = Button;
Button.displayName = 'Button';