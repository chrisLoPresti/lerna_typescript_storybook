"use strict";

require("core-js/modules/es6.array.find");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _index = _interopRequireDefault(require("./index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('manager.ui.components.addon_panel.index', function () {
  test('should render only the selected panel with display set other than "none"', function () {
    var panels = {
      test1: {
        title: 'TEST 1',
        // eslint-disable-next-line react/prop-types
        render: function render(_ref) {
          var active = _ref.active,
              key = _ref.key;
          return active ? _react.default.createElement("div", {
            id: "test1",
            key: key
          }, "TEST 1") : null;
        }
      },
      test2: {
        title: 'TEST 2',
        // eslint-disable-next-line react/prop-types
        render: function render(_ref2) {
          var active = _ref2.active,
              key = _ref2.key;
          return active ? _react.default.createElement("div", {
            id: "test2",
            key: key
          }, "TEST 2") : null;
        }
      }
    };
    var onPanelSelect = jest.fn();
    var wrapper = (0, _enzyme.mount)(_react.default.createElement(_index.default, {
      panels: panels,
      onPanelSelect: onPanelSelect,
      selectedPanel: "test2"
    }));
    expect(wrapper.find('#test2')).toExist();
    expect(wrapper.find('Tab').at(0)).toHaveProp('active', false);
    expect(wrapper.find('Tab').at(1)).toHaveProp('active', true);
  });
  test('should set onPanelSelected as onClick handlers of tabs', function () {
    var panels = {
      test1: {
        title: 'TEST 1',
        // eslint-disable-next-line react/prop-types
        render: function render(_ref3) {
          var key = _ref3.key;
          return _react.default.createElement("div", {
            key: key
          }, "TEST 1");
        }
      }
    };
    var onPanelSelect = jest.fn();
    var preventDefault = jest.fn();
    var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, {
      panels: panels,
      onPanelSelect: onPanelSelect,
      selectedPanel: "test1"
    }));
    wrapper.dive().find('Tab').dive().simulate('click', {
      preventDefault: preventDefault
    });
    expect(onPanelSelect).toHaveBeenCalled();
    expect(preventDefault).toHaveBeenCalled();
  });
  describe('when no panels are given', function () {
    test('should render "no panels available"', function () {
      var panels = {};

      var onPanelSelect = function onPanelSelect() {
        return 'onPanelSelect';
      };

      var wrapper = (0, _enzyme.shallow)(_react.default.createElement(_index.default, {
        panels: panels,
        onPanelSelect: onPanelSelect
      })).dive();
      expect(wrapper.contains('no panels available')).toBe(true);
    });
  });
});