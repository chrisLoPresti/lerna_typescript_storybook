"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.Provider = void 0;

require("core-js/modules/es6.array.for-each");

require("core-js/modules/es6.array.filter");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es6.object.define-property");

var _mantraCore = require("@storybook/mantra-core");

var _podda = _interopRequireDefault(require("@storybook/podda"));

var _context = _interopRequireDefault(require("./context"));

var _shortcuts = _interopRequireDefault(require("./modules/shortcuts"));

var _api = _interopRequireDefault(require("./modules/api"));

var _ui = _interopRequireDefault(require("./modules/ui"));

var _compose = require("./compose");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Provider =
/*#__PURE__*/
function () {
  function Provider() {
    _classCallCheck(this, Provider);
  }

  _createClass(Provider, [{
    key: "renderPreview",
    value: function renderPreview() {
      throw new Error('Provider.renderPreview() is not implemented!');
    }
  }, {
    key: "handleAPI",
    value: function handleAPI() {
      throw new Error('Provider.handleAPI() is not implemented!');
    }
  }]);

  return Provider;
}();

exports.Provider = Provider;

function _default(domNode, provider) {
  if (!(provider instanceof Provider)) {
    throw new Error('provider is not extended from the base Provider');
  }

  var defaultState = _objectSpread({}, _shortcuts.default.defaultState, _api.default.defaultState, _ui.default.defaultState);

  var clientStore = new _podda.default(defaultState);
  clientStore.registerAPI('toggle', function (store, key) {
    return store.set(key, !store.get(key));
  });
  var context = (0, _context.default)(clientStore, domNode, provider);
  var app = (0, _mantraCore.createApp)(context);
  app.loadModule(_shortcuts.default);
  app.loadModule(_api.default);
  app.loadModule(_ui.default);
  (0, _compose.setContext)(context);
  (0, _compose.setActions)(app._bindContext(app.actions)); // eslint-disable-line

  app.init();
}