"use strict";

require("core-js/modules/es6.object.define-property");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getShortcuts = getShortcuts;
exports.default = exports.Shortcuts = exports.Keys = void 0;

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.function.name");

require("core-js/modules/es6.array.map");

require("core-js/modules/es6.array.index-of");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _reactModal = _interopRequireDefault(require("react-modal"));

var _core = require("@emotion/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Command =
/*#__PURE__*/
(0, _styled.default)("b", {
  target: "e1es3dtn0"
})(function (_ref) {
  var isLast = _ref.isLast,
      isFirst = _ref.isFirst,
      theme = _ref.theme;

  switch (true) {
    case isFirst && isLast:
      {
        return {
          borderRight: '0 none',
          borderRadius: 2,
          marginRight: 0
        };
      }

    case isFirst:
      {
        return {
          borderRight: theme.mainBorder,
          borderRadius: "".concat(theme.mainBorderRadius, " 0 0 ").concat(theme.mainBorderRadius),
          marginRight: 0
        };
      }

    case isLast:
      {
        return {
          borderRight: '0 none',
          borderRadius: "0 ".concat(theme.mainBorderRadius, " ").concat(theme.mainBorderRadius, " 0"),
          marginRight: 9
        };
      }

    default:
      {
        return {
          borderRight: '0 none',
          borderRadius: 0,
          marginRight: 9
        };
      }
  }
}, function (_ref2) {
  var theme = _ref2.theme;
  return {
    padding: '2px 10px',
    backgroundColor: theme.inputFill,
    color: 'inherit',
    lineHeight: '36px',
    minWidth: 50,
    display: 'inline-block',
    textAlign: 'center'
  };
});
var Title =
/*#__PURE__*/
(0, _styled.default)("h4", {
  target: "e1es3dtn1"
})({
  marginTop: 0,
  textAlign: 'left',
  color: 'inherit'
});
var Table =
/*#__PURE__*/
(0, _styled.default)("table", {
  target: "e1es3dtn2"
})({
  borderCollapse: 'collapse'
});
var CommandDescription =
/*#__PURE__*/
(0, _styled.default)("span", {
  target: "e1es3dtn3"
})({
  fontSize: 12,
  color: 'inherit'
}); // manage two separate shortcut keys for
// 'mac' & other (windows, linux) platforms

function getShortcuts(platform) {
  // if it is mac platform
  if (platform && platform.indexOf('mac') !== -1) {
    return [{
      name: 'Show Search Box',
      keys: ['⌘ ⇧ O', '⌃ ⇧ O']
    }, {
      name: 'Toggle Addon panel position',
      keys: ['⌘ ⇧ G', '⌃ ⇧ G']
    }, {
      name: 'Toggle Fullscreen Mode',
      keys: ['⌘ ⇧ F', '⌃ ⇧ F']
    }, {
      name: 'Toggle Stories Panel',
      keys: ['⌘ ⇧ X', '⌃ ⇧ X']
    }, {
      name: 'Toggle Addon panel',
      keys: ['⌘ ⇧ Z', '⌃ ⇧ Z']
    }, {
      name: 'Next Story',
      keys: ['⌘ ⇧ →', '⌃ ⇧ →']
    }, {
      name: 'Previous Story',
      keys: ['⌘ ⇧ ←', '⌃ ⇧ ←']
    }];
  }

  return [{
    name: 'Show Search Box',
    keys: ['Ctrl + Shift + O']
  }, {
    name: 'Toggle Addon panel position',
    keys: ['Ctrl + Shift + G']
  }, {
    name: 'Toggle Fullscreen Mode',
    keys: ['Ctrl + Shift + F']
  }, {
    name: 'Toggle Stories Panel',
    keys: ['Ctrl + Shift + X']
  }, {
    name: 'Toggle Addon panel',
    keys: ['Ctrl + Shift + Z']
  }, {
    name: 'Next Story',
    keys: ['Ctrl + Shift + →']
  }, {
    name: 'Previous Story',
    keys: ['Ctrl + Shift + ←']
  }];
}

var Keys = function Keys(_ref3) {
  var shortcutKeys = _ref3.shortcutKeys;
  return _react.default.createElement("span", null, shortcutKeys.map(function (key, index, arr) {
    return _react.default.createElement(Command, {
      key: key,
      isLast: arr.length - 1 === index,
      isFirst: index === 0
    }, key);
  }));
};

exports.Keys = Keys;
Keys.propTypes = {
  shortcutKeys: _propTypes.default.arrayOf(_propTypes.default.string).isRequired
};

var Shortcuts = function Shortcuts(_ref4) {
  var appShortcuts = _ref4.appShortcuts;
  return _react.default.createElement("div", null, _react.default.createElement(Title, null, "Keyboard Shortcuts"), _react.default.createElement(Table, null, _react.default.createElement("tbody", null, appShortcuts.map(function (shortcut) {
    return _react.default.createElement("tr", {
      key: shortcut.name
    }, _react.default.createElement("td", null, _react.default.createElement(Keys, {
      shortcutKeys: shortcut.keys
    })), _react.default.createElement("td", null, _react.default.createElement(CommandDescription, null, shortcut.name)));
  }))));
};

exports.Shortcuts = Shortcuts;
Shortcuts.propTypes = {
  appShortcuts: _propTypes.default.arrayOf(_propTypes.default.shape({
    name: _propTypes.default.string.isRequired,
    keys: _propTypes.default.array
  })).isRequired
};

function ShortcutsHelp(_ref5, _ref6) {
  var isOpen = _ref5.isOpen,
      onClose = _ref5.onClose,
      platform = _ref5.platform;
  var theme = _ref6.theme;
  return _react.default.createElement(_reactModal.default, {
    isOpen: isOpen,
    onRequestClose: onClose,
    style: {
      overlay: {
        background: theme.overlayBackground,
        zIndex: 1
      },
      content: {
        border: theme.mainBorder,
        borderRadius: theme.mainBorderRadius,
        boxSizing: 'border-box',
        padding: 32,
        top: 32,
        left: '50%',
        right: 0,
        bottom: 0,
        width: 440,
        outline: '0 none',
        marginLeft: -220,
        overflow: 'visible',
        background: theme.barFill,
        fontSize: theme.mainTextColor,
        fontFamily: theme.mainTextFace,
        color: theme.mainTextColor
      }
    },
    contentLabel: "Shortcuts"
  }, _react.default.createElement(Shortcuts, {
    appShortcuts: getShortcuts(platform)
  }));
}

ShortcutsHelp.propTypes = {
  theme: _propTypes.default.shape({}).isRequired,
  isOpen: _propTypes.default.bool,
  onClose: _propTypes.default.func,
  platform: _propTypes.default.string.isRequired
};
ShortcutsHelp.defaultProps = {
  isOpen: false,
  onClose: function onClose() {}
};

var _default = (0, _core.withCSSContext)(ShortcutsHelp);

exports.default = _default;