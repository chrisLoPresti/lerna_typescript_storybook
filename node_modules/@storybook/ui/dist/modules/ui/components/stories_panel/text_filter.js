"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es6.array.for-each");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.symbol");

require("core-js/modules/es6.object.define-property");

require("core-js/modules/es6.object.create");

require("core-js/modules/es6.object.set-prototype-of");

require("core-js/modules/es6.function.bind");

require("core-js/modules/es6.array.filter");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _reactLifecyclesCompat = require("react-lifecycles-compat");

var _debounce = _interopRequireDefault(require("lodash/debounce"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var defaultTextValue = '';
var Wrapper =
/*#__PURE__*/
(0, _styled.default)("div", {
  target: "eg9vth70"
})({
  position: 'relative'
});
var Input =
/*#__PURE__*/
(0, _styled.default)("input", {
  target: "eg9vth71"
})(function (_ref) {
  var theme = _ref.theme;
  return _objectSpread({
    fontSize: 12,
    color: '#828282',
    padding: 5,
    display: 'block',
    width: '100%',
    boxSizing: 'border-box',
    height: 26,
    background: theme.mainFill,
    border: '0 none',
    outline: 'none',
    borderRadius: 2
  }, theme.filter);
});
var ClearButton =
/*#__PURE__*/
(0, _styled.default)("button", {
  target: "eg9vth72"
})({
  position: 'absolute',
  backgroundColor: 'transparent',
  color: '#868686',
  border: 'none',
  width: 25,
  height: 26,
  right: 1,
  top: 0,
  textAlign: 'center',
  cursor: 'pointer',
  lineHeight: '23px',
  fontSize: 20
});
var debounceFilterChangeTimeout = 500;

var TextFilter =
/*#__PURE__*/
function (_React$Component) {
  _inherits(TextFilter, _React$Component);

  function TextFilter(props) {
    var _this;

    _classCallCheck(this, TextFilter);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextFilter).call(this, props));
    _this.state = {};
    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this.fireOnClear = _this.fireOnClear.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this.changeFilter = (0, _debounce.default)(_this.changeFilter, debounceFilterChangeTimeout);
    return _this;
  }

  _createClass(TextFilter, [{
    key: "onChange",
    value: function onChange(event) {
      var text = event.target.value;
      this.setState({
        query: text
      });
      this.changeFilter(text);
    }
  }, {
    key: "fireOnClear",
    value: function fireOnClear() {
      this.setState({
        query: defaultTextValue
      });
      var onClear = this.props.onClear;
      if (onClear) onClear();
    }
  }, {
    key: "changeFilter",
    value: function changeFilter(text) {
      var onChange = this.props.onChange;
      if (onChange) onChange(text);
    }
  }, {
    key: "render",
    value: function render() {
      var query = this.state.query;
      return _react.default.createElement(Wrapper, null, _react.default.createElement(Input, {
        autoComplete: "off",
        spellCheck: "false",
        type: "text",
        placeholder: "Filter",
        name: "filter-text",
        value: query || defaultTextValue,
        onChange: this.onChange
      }), query && query.length && _react.default.createElement(ClearButton, {
        onClick: this.fireOnClear,
        className: "clear"
      }, "\xD7"));
    }
  }]);

  return TextFilter;
}(_react.default.Component);

TextFilter.getDerivedStateFromProps = function (_ref2, _ref3) {
  var text = _ref2.text;
  var prevText = _ref3.prevText;

  if (text !== prevText) {
    return {
      query: text,
      prevText: text
    };
  }

  return null;
};

TextFilter.defaultProps = {
  text: defaultTextValue,
  onChange: null,
  onClear: null
};
TextFilter.propTypes = {
  // eslint-disable-next-line react/no-unused-prop-types
  text: _propTypes.default.string,
  onChange: _propTypes.default.func,
  onClear: _propTypes.default.func
};
(0, _reactLifecyclesCompat.polyfill)(TextFilter);
var _default = TextFilter;
exports.default = _default;