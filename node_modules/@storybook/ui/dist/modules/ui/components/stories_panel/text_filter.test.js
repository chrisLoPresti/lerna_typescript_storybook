"use strict";

require("core-js/modules/es6.array.find");

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _text_filter = _interopRequireDefault(require("./text_filter"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

jest.mock('lodash/debounce', function () {
  return jest.fn(function (fn) {
    return fn;
  });
});
describe('manager.ui.components.stories_panel.test_filter', function () {
  describe('render', function () {
    test('should render input without filterText', function () {
      var wrap = (0, _enzyme.mount)(_react.default.createElement(_text_filter.default, null));
      var input = wrap.find('[name="filter-text"]').first();
      expect(input).toHaveProp('placeholder', 'Filter');
    });
    test('should render input with filterText', function () {
      var wrap = (0, _enzyme.mount)(_react.default.createElement(_text_filter.default, {
        text: "Filter Text"
      }));
      var input = wrap.find('[name="filter-text"]').first();
      expect(input).toHaveProp('value', 'Filter Text');
    });
  });
  describe('functions', function () {
    test('should call the onChange prop when input changes', function () {
      var onChange = jest.fn();
      var wrap = (0, _enzyme.mount)(_react.default.createElement(_text_filter.default, {
        onChange: onChange
      }));
      var input = wrap.find('[name="filter-text"]').first();
      input.value = 'new value';
      input.simulate('change', {
        target: input
      });
      expect(onChange).toHaveBeenCalledWith('new value');
    });
    test('should call the onClear prop when the button is clicked', function () {
      var onClear = jest.fn();
      var wrap = (0, _enzyme.mount)(_react.default.createElement(_text_filter.default, {
        onClear: onClear
      }));
      wrap.setState({
        query: 'hello'
      });
      var clear = wrap.find('.clear').first();
      clear.simulate('click');
      expect(onClear).toHaveBeenCalled();
    });
  });
});