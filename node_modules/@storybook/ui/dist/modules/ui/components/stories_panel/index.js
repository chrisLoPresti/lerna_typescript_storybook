"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.symbol");

require("core-js/modules/es6.object.assign");

require("core-js/modules/es6.object.define-property");

require("core-js/modules/es6.object.create");

require("core-js/modules/es6.object.set-prototype-of");

require("core-js/modules/es6.function.name");

require("core-js/modules/es6.array.map");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _pick = _interopRequireDefault(require("lodash/pick"));

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _components = require("@storybook/components");

var _stories_tree = _interopRequireDefault(require("./stories_tree"));

var _text_filter = _interopRequireDefault(require("./text_filter"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Wrapper =
/*#__PURE__*/
(0, _styled.default)("div", {
  target: "e1b9pp5i0"
})(function (_ref) {
  var isMobileDevice = _ref.isMobileDevice;
  return isMobileDevice ? {
    padding: '10px'
  } : {
    padding: '10px 0 10px 10px'
  };
});
var storyProps = ['selectedKind', 'selectedHierarchy', 'selectedStory', 'onSelectStory', 'storyFilter', 'sidebarAnimations'];

function hierarchyContainsStories(storiesHierarchy) {
  return storiesHierarchy && storiesHierarchy.map.size > 0;
} // This component gets a ref so it needs to be a class
// eslint-disable-next-line react/prefer-stateless-function


var StoriesPanel =
/*#__PURE__*/
function (_Component) {
  _inherits(StoriesPanel, _Component);

  function StoriesPanel() {
    _classCallCheck(this, StoriesPanel);

    return _possibleConstructorReturn(this, _getPrototypeOf(StoriesPanel).apply(this, arguments));
  }

  _createClass(StoriesPanel, [{
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          isMobileDevice = _this$props.isMobileDevice,
          name = _this$props.name,
          onStoryFilter = _this$props.onStoryFilter,
          openShortcutsHelp = _this$props.openShortcutsHelp,
          shortcutOptions = _this$props.shortcutOptions,
          storiesHierarchies = _this$props.storiesHierarchies,
          storyFilter = _this$props.storyFilter,
          url = _this$props.url;
      return _react.default.createElement(Wrapper, {
        isMobileDevice: isMobileDevice
      }, _react.default.createElement(_components.Header, {
        name: name,
        url: url,
        openShortcutsHelp: shortcutOptions.enableShortcuts ? openShortcutsHelp : null,
        enableShortcutsHelp: shortcutOptions.enableShortcuts
      }), _react.default.createElement(_text_filter.default, {
        text: storyFilter,
        onClear: function onClear() {
          return onStoryFilter('');
        },
        onChange: function onChange(text) {
          return onStoryFilter(text);
        }
      }), storiesHierarchies.map(function (hierarchy) {
        return hierarchyContainsStories(hierarchy) && _react.default.createElement(_stories_tree.default, _extends({
          key: hierarchy.name
        }, (0, _pick.default)(_this.props, storyProps), {
          storiesHierarchy: hierarchy
        }));
      }));
    }
  }]);

  return StoriesPanel;
}(_react.Component);

StoriesPanel.defaultProps = {
  storiesHierarchies: [],
  storyFilter: null,
  onStoryFilter: function onStoryFilter() {},
  openShortcutsHelp: null,
  isMobileDevice: false,
  name: '',
  url: '',
  shortcutOptions: {
    goFullScreen: false,
    showStoriesPanel: true,
    showAddonPanel: true,
    showSearchBox: false,
    addonPanelInRight: false,
    enableShortcuts: true
  }
};
StoriesPanel.propTypes = {
  storiesHierarchies: _propTypes.default.arrayOf(_propTypes.default.shape({
    namespaces: _propTypes.default.arrayOf(_propTypes.default.string),
    name: _propTypes.default.string,
    map: _propTypes.default.object
  })),
  storyFilter: _propTypes.default.string,
  onStoryFilter: _propTypes.default.func,
  openShortcutsHelp: _propTypes.default.func,
  isMobileDevice: _propTypes.default.bool,
  name: _propTypes.default.string,
  url: _propTypes.default.string,
  shortcutOptions: _propTypes.default.shape({
    goFullScreen: _propTypes.default.bool,
    showStoriesPanel: _propTypes.default.bool,
    showAddonPanel: _propTypes.default.bool,
    showSearchBox: _propTypes.default.bool,
    addonPanelInRight: _propTypes.default.bool,
    enableShortcuts: _propTypes.default.bool
  })
};
var _default = StoriesPanel;
exports.default = _default;